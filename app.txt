package com.example.conveter // Make sure this matches your package name

import android.os.Bundle
import android.view.View
import android.widget.ArrayAdapter
import android.widget.Button
import android.widget.EditText
import android.widget.Spinner
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {

    private lateinit var inputNumber: EditText
    private lateinit var inputBaseSpinner: Spinner
    private lateinit var outputBaseSpinner: Spinner
    private lateinit var outputResult: TextView

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        // Initialize views
        inputNumber = findViewById(R.id.inputNumber)
        inputBaseSpinner = findViewById(R.id.inputBaseSpinner)
        outputBaseSpinner = findViewById(R.id.outputBaseSpinner)
        outputResult = findViewById(R.id.outputResult)

        // Set up the spinners
        val bases = arrayOf("Binary", "Octal", "Decimal", "Hexadecimal")
        val adapter = ArrayAdapter(this, android.R.layout.simple_spinner_item, bases)
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
        inputBaseSpinner.adapter = adapter
        outputBaseSpinner.adapter = adapter

        // Set the click listener for the convert button
        findViewById<Button>(R.id.convertButton).setOnClickListener {
            convertNumber()
        }
    }

    private fun convertNumber() {
        val inputBase = inputBaseSpinner.selectedItem.toString()
        val outputBase = outputBaseSpinner.selectedItem.toString()
        val input = inputNumber.text.toString()

        // Check for empty input
        if (input.isEmpty()) {
            outputResult.text = "Please enter a number."
            return
        }

        // Convert input to decimal
        val decimalValue = try {
            when (inputBase) {
                "Binary" -> input.toInt(2)
                "Octal" -> input.toInt(8)
                "Hexadecimal" -> input.toInt(16)
                "Decimal" -> input.toInt()
                else -> 0
            }
        } catch (e: NumberFormatException) {
            outputResult.text = "Invalid number format."
            return
        }

        // Convert decimal to the desired output base
        val result = when (outputBase) {
            "Binary" -> Integer.toBinaryString(decimalValue)
            "Decimal" -> decimalValue.toString()
            "Octal" -> Integer.toOctalString(decimalValue)
            "Hexadecimal" -> Integer.toHexString(decimalValue).uppercase()
            else -> ""
        }

        // Display the result
        outputResult.text = result
    }
}
